{"version":3,"sources":["ball-dp.png","components/navbar.jsx","components/counter.jsx","components/counters.jsx","components/input.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","styleForCount","bgcolor","marginRight","style","paddingLeft","className","href","width","height","src","dp_img","this","props","positiveTotalCount","Component","Counter","incrementCounter","increaseProp","id","decrementCounter","decreaseProp","counterStyles","borderRadius","paddingTop","Fragment","getColorForCount","formatCount","onClick","display","textAlign","textShadow","fontWeight","fontSize","backgroundColor","padding","paddingBottom","name","onDelete","classNameForCount","value","counters","resetAll","map","itr","selected","deleteItem","increaseValue","decreaseValue","InputForm","state","isToggle","changeToggle","setState","functionForInput","boxSizing","position","onSubmit","mySubmitHandler","margin","border","borderStyle","borderColor","right","excapeAdd","type","onChange","myChangeHandler","event","target","alert","appendItem","App","newId","items","itemName","gnId","deleteId","newCounter","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c079bfe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ball-dp.73c7d06a.png\";","import React, { Component } from \"react\";\nimport dp_img from \"../ball-dp.png\";\n\nclass NavBar extends Component {\n  styleForCount = {\n    bgcolor: \"red\",\n    marginRight: 60,\n  };\n  render() {\n    return (\n      <nav\n        style={{ paddingLeft: 30 }}\n        className=\"navbar navbar-light bg-primary\"\n      >\n        <a className=\"navbar-brand\" href=\"#\">\n          <img\n            style={{ width: 40, height: 40, marginRight: 9 }}\n            src={dp_img}\n          ></img>\n          ABC Super market\n        </a>\n        <span\n          style={this.styleForCount}\n          className=\"badge badge-pill badge-secondary m-2\"\n        >\n          {this.props.positiveTotalCount}\n        </span>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  // state = {\n  //   count: this.props.value,\n  // };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <div style={this.counterStyles()} className={this.getColorForCount()}>\n            {this.formatCount()}\n          </div>\n          <button\n            onClick={this.decrementCounter}\n            className=\"btn btn-danger m-2\"\n          >\n            <h1>-</h1>\n          </button>\n          <span\n            style={{\n              display: \"inline-block\",\n              width: 120,\n              textAlign: \"center\",\n              textShadow: true,\n              fontWeight: \"bold\",\n              fontSize: 20,\n              backgroundColor: \"lightblue\",\n              padding: 10,\n              paddingTop: 20,\n              paddingBottom: 20,\n            }}\n          >\n            {this.props.name}\n          </span>\n          <button\n            onClick={this.incrementCounter}\n            className=\"btn ben-danger m-2\"\n          >\n            <h1>+</h1>\n          </button>\n          {/* {this.displayMenuItems()} */}\n          <button\n            onClick={() => this.props.onDelete(this.props.id)}\n            className=\"btn btn-danger\"\n          >\n            Delete\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  incrementCounter = () => {\n    this.props.increaseProp(this.props.id);\n    // this.setState({ count: this.state.count + 1 });\n    // console.log(\"clicked!!\", this.state.count);\n  };\n  decrementCounter = () => {\n    this.props.decreaseProp(this.props.id);\n    // if (this.state.count != 0) this.setState({ count: this.state.count - 1 });\n    // console.log(\"clicked!!\", this.state.count);\n  };\n  counterStyles = () => {\n    return {\n      width: 80,\n      // {this.state.count===0 ?:'width:80'},\n      borderRadius: 50,\n      paddingTop: 8,\n    };\n  };\n\n  getColorForCount() {\n    let classNameForCount = \"badge m-2 badge-\";\n    classNameForCount += this.props.value === 0 ? \"warning\" : \"primary\";\n    return classNameForCount;\n  }\n\n  formatCount() {\n    const { value } = this.props;\n    return value === 0 ? <h2>Zero</h2> : <h2>{value}</h2>;\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass counters extends Component {\n  render() {\n    return (\n      <span>\n        <button\n          onClick={this.props.resetAll}\n          className=\"btn btn-primary \"\n          style={{\n            backgroundColor: \"magenta\",\n            // margin: 5,\n            // marginLeft: \"20em\",\n          }}\n        >\n          Reset\n        </button>\n        {this.props.counters.map((itr) => (\n          <Counter\n            key={itr.id}\n            id={itr.id}\n            value={itr.value}\n            name={itr.name}\n            selected={true}\n            onDelete={this.props.deleteItem}\n            increaseProp={this.props.increaseValue}\n            decreaseProp={this.props.decreaseValue}\n          />\n        ))}\n      </span>\n    );\n  }\n}\n\nexport default counters;\n","import React, { Component } from \"react\";\nimport counters from \"./counters\";\nimport \"./styleForInput.css\";\n\nclass InputForm extends Component {\n  state = {\n    isToggle: true,\n  };\n  render() {\n    return (\n      <span>\n        <button\n          id={this.state.isToggle ? \"\" : \"AddButton\"}\n          onClick={this.changeToggle}\n          className=\"btn btn-primary m-2\"\n        >\n          {this.functionForInput()}\n        </button>\n      </span>\n    );\n  }\n  changeToggle = () => {\n    if (this.state.isToggle) this.setState({ isToggle: !this.state.isToggle });\n    // console.log(this.state.isToggle);\n  };\n  functionForInput = () => {\n    if (this.state.isToggle) return \"Add\";\n    else\n      return (\n        <form\n          style={{\n            boxSizing: \"border-box\",\n            position: \"relative\",\n            backgroundColor: \"#5e268c\",\n          }}\n          onSubmit={this.mySubmitHandler}\n        >\n          <button\n            style={{\n              margin: 0,\n              border: 1,\n              backgroundColor: \"darkblue\",\n              borderStyle: \"solid\",\n              padding: 0,\n              borderColor: \"black\",\n              position: \"absolute\",\n              right: 0.5,\n            }}\n            onClick={this.excapeAdd}\n          >\n            <span id=\"closeButtonForInput\" className=\"\">\n              X\n            </span>\n          </button>\n          <p style={{ paddingTop: 20 }}>Enter the item: </p>\n          <input name=\"itemName\" type=\"text\" onChange={this.myChangeHandler} />\n          <button type=\"submit\">SUBMIT</button>\n        </form>\n      );\n  };\n\n  mySubmitHandler = (event) => {\n    if (!event.target[1].value) alert(\"Empty\");\n    this.props.appendItem(event.target[1].value);\n    this.setState({ isToggle: true });\n  };\n  excapeAdd = () => {\n    this.setState({ isToggle: true });\n  };\n}\n\nexport default InputForm;\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport \"./App.css\";\nimport InputForm from \"./components/input\";\n\nimport Counter from \"./components/counter\";\nimport { render } from \"@testing-library/react\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 1, name: \"Milk\" },\n      { id: 2, value: 0, name: \"GoodDay\" },\n      { id: 3, value: 2, name: \"Bread\" },\n      { id: 4, value: 0, name: \"Fruits\" },\n      { id: 5, value: 0, name: \"Vegetables\" },\n    ],\n    newId: 6,\n    items: [\"apple\", \"banana\", \"grape\"],\n  };\n  resetAll = () => {\n    const counters = [...this.state.counters];\n    counters.map((itr) => {\n      itr.value = 0;\n    });\n    this.setState(counters);\n    // console.log(counters);\n  };\n\n  appendItem = (itemName) => {\n    // console.log(itemName);\n    let counters = [\n      ...this.state.counters,\n      {\n        id: this.state.newId++,\n        value: 0,\n        name: itemName,\n      },\n    ];\n    this.setState({ counters });\n    // console.log(counters);\n  };\n\n  increaseValue = (gnId) => {\n    let counters = [...this.state.counters];\n    counters.map((itr) => {\n      if (itr.id === gnId) itr.value++;\n    });\n    this.setState(counters);\n  };\n\n  decreaseValue = (gnId) => {\n    let counters = [...this.state.counters];\n    counters.map((itr) => {\n      if (itr.id === gnId && itr.value > 0) itr.value--;\n    });\n    this.setState(counters);\n  };\n\n  deleteItem = (deleteId) => {\n    const newCounter = this.state.counters.filter((itr) => itr.id !== deleteId);\n    this.setState({ counters: newCounter });\n    // console.log();\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar\n          positiveTotalCount={\n            this.state.counters.filter((itr) => itr.value).length\n          }\n        />\n        <main className=\"container\">\n          <InputForm appendItem={this.appendItem} />\n          <Counters\n            counters={this.state.counters}\n            items={this.state.items}\n            resetAll={this.resetAll}\n            increaseValue={this.increaseValue}\n            decreaseValue={this.decreaseValue}\n            deleteItem={this.deleteItem}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Counters /> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}