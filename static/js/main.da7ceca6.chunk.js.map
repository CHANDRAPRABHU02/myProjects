{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","href","this","props","positiveTotalCount","Component","Counter","incrementCounter","increaseProp","id","decrementCounter","decreaseProp","counterStyles","width","borderRadius","paddingTop","Fragment","style","getColorForCount","formatCount","onClick","display","textAlign","textShadow","fontWeight","fontSize","backgroundColor","padding","paddingBottom","name","onDelete","classNameForCount","value","counters","resetAll","margin","marginLeft","map","itr","selected","deleteItem","increaseValue","decreaseValue","App","state","items","setState","gnId","deleteId","newCounter","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da7ceca6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Navbar\n          <span className=\"badge badge-pill badge-secondary m-2\">\n            {this.props.positiveTotalCount}\n          </span>\n        </a>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  // state = {\n  //   count: this.props.value,\n  // };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <div style={this.counterStyles()} className={this.getColorForCount()}>\n            {this.formatCount()}\n          </div>\n          <button\n            onClick={this.decrementCounter}\n            className=\"btn btn-danger m-2\"\n          >\n            <h1>-</h1>\n          </button>\n          <span\n            style={{\n              display: \"inline-block\",\n              width: 120,\n              textAlign: \"center\",\n              textShadow: true,\n              fontWeight: \"bold\",\n              fontSize: 20,\n              backgroundColor: \"lightblue\",\n              padding: 10,\n              paddingTop: 20,\n              paddingBottom: 20,\n            }}\n          >\n            {this.props.name}\n          </span>\n          <button\n            onClick={this.incrementCounter}\n            className=\"btn ben-danger m-2\"\n          >\n            <h1>+</h1>\n          </button>\n          {/* {this.displayMenuItems()} */}\n          <button\n            onClick={() => this.props.onDelete(this.props.id)}\n            className=\"btn btn-danger\"\n          >\n            Delete\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  incrementCounter = () => {\n    this.props.increaseProp(this.props.id);\n    // this.setState({ count: this.state.count + 1 });\n    // console.log(\"clicked!!\", this.state.count);\n  };\n  decrementCounter = () => {\n    this.props.decreaseProp(this.props.id);\n    // if (this.state.count != 0) this.setState({ count: this.state.count - 1 });\n    // console.log(\"clicked!!\", this.state.count);\n  };\n  counterStyles = () => {\n    return {\n      width: 80,\n      // {this.state.count===0 ?:'width:80'},\n      borderRadius: 50,\n      paddingTop: 8,\n    };\n  };\n\n  getColorForCount() {\n    let classNameForCount = \"badge m-2 badge-\";\n    classNameForCount += this.props.value === 0 ? \"warning\" : \"primary\";\n    return classNameForCount;\n  }\n\n  formatCount() {\n    const { value } = this.props;\n    return value === 0 ? <h2>Zero</h2> : <h2>{value}</h2>;\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass counters extends Component {\n  render() {\n    return (\n      <div>\n        <button\n          onClick={this.props.resetAll}\n          className=\"btn btn-primary \"\n          style={{\n            backgroundColor: \"magenta\",\n            margin: 5,\n            marginLeft: \"20em\",\n          }}\n        >\n          Reset\n        </button>\n        {this.props.counters.map((itr) => (\n          <Counter\n            key={itr.id}\n            id={itr.id}\n            value={itr.value}\n            name={itr.name}\n            selected={true}\n            onDelete={this.props.deleteItem}\n            increaseProp={this.props.increaseValue}\n            decreaseProp={this.props.decreaseValue}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default counters;\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport \"./App.css\";\nimport Counter from \"./components/counter\";\nimport { render } from \"@testing-library/react\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 1, name: \"Milk\" },\n      { id: 2, value: 0, name: \"GoodDay\" },\n      { id: 3, value: 2, name: \"Bread\" },\n      { id: 4, value: 0, name: \"Fruits\" },\n      { id: 5, value: 0, name: \"Vegetables\" },\n    ],\n    items: [\"apple\", \"banana\", \"grape\"],\n  };\n  resetAll = () => {\n    const counters = [...this.state.counters];\n    counters.map((itr) => {\n      itr.value = 0;\n    });\n    this.setState(counters);\n    // console.log(counters);\n  };\n\n  increaseValue = (gnId) => {\n    let counters = [...this.state.counters];\n    counters.map((itr) => {\n      if (itr.id === gnId) itr.value++;\n    });\n    this.setState(counters);\n  };\n\n  decreaseValue = (gnId) => {\n    let counters = [...this.state.counters];\n    counters.map((itr) => {\n      if (itr.id === gnId && itr.value > 0) itr.value--;\n    });\n    this.setState(counters);\n  };\n\n  deleteItem = (deleteId) => {\n    const newCounter = this.state.counters.filter((itr) => itr.id !== deleteId);\n    this.setState({ counters: newCounter });\n    // console.log();\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar\n          positiveTotalCount={\n            this.state.counters.filter((itr) => itr.value).length\n          }\n        />\n        <main className=\"container\">\n          <Counters\n            counters={this.state.counters}\n            items={this.state.items}\n            resetAll={this.resetAll}\n            increaseValue={this.increaseValue}\n            decreaseValue={this.decreaseValue}\n            deleteItem={this.deleteItem}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Counters /> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}